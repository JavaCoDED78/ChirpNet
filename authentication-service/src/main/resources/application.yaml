server:
  port: 8080

spring:
  config:
    import: optional:file:.env[.properties]

  datasource:
    url: jdbc:postgresql://localhost:5432/authentication-service
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

  liquibase:
    change-log: classpath:liquibase/db.changelog.yaml
    enabled: true

  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    open-in-view: false

  kafka:
    producer:
      bootstrap-servers: localhost:9092,localhost:9094,localhost:9096
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      transaction-id-prefix: authentication-service-${random.uuid}-
      properties:
        delivery.timeout.ms: 20000
        linger.ms: 0
        request.timeout.ms: 10000
        max.in.flight.requests.per.connection: 5
        enable:
          idempotence: true

jwt:
  access-token-key: '{"kty":"oct","k":"hi7S5RX5ZRZooHA0RKGctZ-KtR9FoESgCnH-3BNg5XI"}'
  refresh-token-key: '{"kty":"oct","k":"956PBFst1FguLr5irJD-aQ"}'

resilience4j:
  circuitbreaker:
    instances:
      profile-service:
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        sliding-window-size: 10
        wait-duration-in-open-state: 3s


logging:
  level:
    io.github.resilience4j.circuitbreaker: trace
    org.springframework.security: trace
    org.springframework.kafka.transaction.KafkaAwareTransactionManager: trace
    org.springframework.transaction: trace
    org.springframework.orm.jpa.JpaTransactionManager: trace
    org.apache.kafka.clients.producer.internals.TransactionManager: trace