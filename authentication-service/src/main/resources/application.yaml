server:
  port: 8080

spring:
  config:
    import: optional:file:.env[.properties]

  datasource:
    url: jdbc:postgresql://localhost:5432/authentication-service
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver

  liquibase:
    change-log: classpath:liquibase/db.changelog.yaml
    enabled: true

  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    open-in-view: false

  docker:
    compose:
      file: authentication-service/docker/compose.yaml
      lifecycle-management: start_only

  kafka:
    producer:
      bootstrap-servers: localhost:9092,localhost:9094,localhost:9096
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      properties:
        delivery.timeout.ms: 20000
        linger.ms: 0
        request.timeout.ms: 10000
        enable:
          idempotence: true


jwt:
  access-token-key: '{"kty":"oct","k":"hi7S5RX5ZRZooHA0RKGctZ-KtR9FoESgCnH-3BNg5XI"}'
  refresh-token-key: '{"kty":"oct","k":"956PBFst1FguLr5irJD-aQ"}'

logging:
  level:
    org.springframework.security: trace