server:
  port: 8084

spring:
  config:
    import: optional:file:.env[.properties]

  data:
    mongodb:
      uri: mongodb://tweet:tweet@localhost:27027/tweet-service?readPreference=secondaryPreferred
      username: tweet
      password: tweet
      host: localhost
      port: 27027
      database: tweet-service
      authenticationDatabase: tweet-service
      auto-index-creation: true

    redis:
      host: localhost
      port: 6380
      password: redis

  liquibase:
    change-log: classpath:liquibase/db.changelog.yaml
    enabled: true

  kafka:
    producer:
      bootstrap-servers: localhost:9092,localhost:9094,localhost:9096
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      transaction-id-prefix: authentication-service-${random.uuid}-
      properties:
        delivery.timeout.ms: 20000
        linger.ms: 0
        request.timeout.ms: 10000
        max.in.flight.requests.per.connection: 5
        enable:
          idempotence: true

  cache:
    type: redis
    cache-names: redis-cache

resilience4j:
  circuitbreaker:
    instances:
      tweet-service:
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        sliding-window-size: 10
        wait-duration-in-open-state: 3s



logging:
  level:
    io.github.resilience4j.circuitbreaker: trace
    org.springframework.data.mongodb: trace
    org.springframework.data.redis: trace
